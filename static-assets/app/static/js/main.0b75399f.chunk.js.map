{"version":3,"sources":["shared/DynamicRoute.js","shared/Router.js","shared/AppIntl.js","shared/App.js","index.js","shared/utils.js","shared/context.js","fetchQuery.js","shared/queries.graphql.js","shared/CircularProgressSpinner.js","shared/hooks.js","shared/contentTypeMap.js"],"names":["DynamicRoute","props","match","location","useState","state","setState","url","path","includes","substring","indexOf","useEffect","destroyed","page","parseInt","parse","search","pagination","limit","offset","reportNavigation","fetchQuery","text","byUrlQuery","includePosts","postsLimit","postsOffset","then","data","model","parseDescriptor","content","items","levelDescriptor","levelDescriptors","filter","file__name","map","meta","siteTitle","siteTitle_s","socialLinks","socialLinks_o","item","disqus","websiteShortname","websiteShortname_s","posts","total","document","title","pageTitle_s","pageDescription_s","description","head","querySelector","setAttribute","window","scroll","CircularProgressSpinner","modelId","craftercms","id","isAuthoring","contentTypeMap","Router","component","Locales","en","es","AppIntl","useGlobalContext","locale","messages","App","jQuery","fallback","Cookies","get","siteName","set","ReactDOM","render","StrictMode","getElementById","attr","documentElement","getAttribute","createResource","factory","result","status","suspender","response","error","read","innerHTML","Error","crafterConfig","baseUrl","process","site","createTaxonomyFilter","name","taxonomy","crafterConf","configure","GlobalContext","createContext","context","useContext","GlobalContextProvider","useSpreadState","pages","pagesLoading","theme","$","value","useMemo","Provider","graphqlServer","operation","variables","fetch","method","headers","body","JSON","stringify","query","json","commonFragments","main","postsQuery","message","screenHeight","className","cx","cy","r","fill","strokeWidth","strokeMiterlimit","neverResource","Promise","reducer","nextState","initializerArg","initializer","useReducer","useNavigation","update","destroyedRef","useRef","current","useSearchQuery","useLocation","q","setQuery","p","setPage","onChange","useCallback","e","target","contentTypes","useUrlSearchQueryFetchResource","size","resource","setResource","createQuery","from","pipe","hits","rest","counted","parsedHits","_source","preParseSearchResults","toPromise","useFooter","footer","footerLoading","component_footer","useRecentPosts","postsLoading","usePosts","paginationData","categories","tags","exclude","setPosts","categoriesFilter","Array","isArray","category","matches","key","tagsFilter","tag","itemsPerPage","currentPage","pageCount","Math","ceil","useTaxonomiesResource","lazy"],"mappings":"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","file":"static/js/main.0b75399f.chunk.js","sourcesContent":["/*\n * Copyright (C) 2007-2020 Crafter Software Corporation. All Rights Reserved.\n *\n * This program is free software: you can redistribute it and/or modify\n * it under the terms of the GNU General Public License version 3 as published by\n * the Free Software Foundation.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU General Public License for more details.\n *\n * You should have received a copy of the GNU General Public License\n * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n */\n\nimport React, { useEffect, useState } from 'react';\n\nimport CircularProgressSpinner from './CircularProgressSpinner';\nimport { fetchQuery } from '../fetchQuery';\nimport byUrlQuery from './queries.graphql';\nimport { parseDescriptor } from '@craftercms/content';\nimport { reportNavigation } from '@craftercms/ice';\nimport { parse } from 'query-string';\nimport { isAuthoring } from './utils';\nimport { Guest, ContentType } from '@craftercms/studio-guest';\nimport contentTypeMap from './contentTypeMap';\n\nconst limit = 8;\n\nexport default function DynamicRoute(props) {\n  const { match, location } = props;\n  const [state, setState] = useState(null);\n  let url = match.path.includes(':')\n    ? match.path.substring(0, match.path.indexOf(':') -1)\n    : match.url;\n\n  useEffect(() => {\n    let destroyed = false;\n    let page = parseInt(parse(location.search).page ?? 1) - 1;\n    const pagination = { limit, offset: page ? (page * limit) : 0 };\n    reportNavigation(url);\n    fetchQuery(\n      { text: byUrlQuery },\n      {\n        url: `.*${url === '/' ? 'website/index' : url}.*`,\n        includePosts: true,\n        postsLimit: pagination.limit,\n        postsOffset: pagination.offset\n      }\n    ).then(({ data }) => {\n      if (!destroyed) {\n        const model = parseDescriptor(data.content.items?.[0]);\n        const levelDescriptor = data.levelDescriptors.items\n          .filter(levelDescriptor => levelDescriptor.file__name === 'crafter-level-descriptor.level.xml')\n          .map(levelDescriptor => levelDescriptor)[0];\n\n        setState({\n          model,\n          meta: {\n            siteTitle: levelDescriptor.siteTitle_s,\n            socialLinks: levelDescriptor.socialLinks_o.item,\n            disqus: {\n              websiteShortname: levelDescriptor.websiteShortname_s\n            },\n            posts: {\n              total: data.posts.total,\n              ...pagination\n            }\n          }\n        });\n        if (model) {\n          document.title = model.pageTitle_s ?? 'Wordify Crafter CMS';\n          if (model.pageDescription_s) {\n            const description = document.head.querySelector('meta[name=\"description\"]');\n            description && description.setAttribute('content', model.pageDescription_s ?? '');\n          }\n        }\n      }\n    });\n    return () => {\n      destroyed = true;\n    };\n  }, [url, location.search]);\n\n  useEffect(() => {\n    window.scroll(0, 0);\n  }, [url]);\n\n  if (state === null) {\n    return <CircularProgressSpinner />;\n  } else {\n    return (\n      <Guest\n        modelId={state.model?.craftercms.id}\n        isAuthoring={isAuthoring()}\n        path={state.model?.craftercms.path}\n      >\n        <ContentType {...state} {...props} contentTypeMap={contentTypeMap} />\n      </Guest>\n    );\n  }\n\n}\n\n","/*\n * Copyright (C) 2007-2020 Crafter Software Corporation. All Rights Reserved.\n *\n * This program is free software: you can redistribute it and/or modify\n * it under the terms of the GNU General Public License version 3 as published by\n * the Free Software Foundation.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU General Public License for more details.\n *\n * You should have received a copy of the GNU General Public License\n * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n */\n\nimport React from 'react';\n\nimport { BrowserRouter, Route, Switch } from 'react-router-dom';\nimport DynamicRoute from './DynamicRoute';\n\nexport default function Router() {\n  return (\n    <BrowserRouter>\n      <Switch>\n        <Route path=\"/category/:id?\" component={DynamicRoute} />\n        <Route path=\"/tag/:id?\" component={DynamicRoute} />\n        <Route path=\"/*\" component={DynamicRoute} />\n      </Switch>\n    </BrowserRouter>\n  );\n}\n","/*\n * Copyright (C) 2007-2020 Crafter Software Corporation. All Rights Reserved.\n *\n * This program is free software: you can redistribute it and/or modify\n * it under the terms of the GNU General Public License version 3 as published by\n * the Free Software Foundation.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU General Public License for more details.\n *\n * You should have received a copy of the GNU General Public License\n * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n */\n\nimport React from 'react';\nimport { IntlProvider } from 'react-intl';\nimport { useGlobalContext } from './context';\nimport en from '../assets/locales/en';\nimport es from '../assets/locales/es';\n\nconst Locales = {\n  en,\n  es\n};\n\nconst AppIntl = (props) => {\n  const [{ locale }] = useGlobalContext();\n  return <IntlProvider {...props} locale={locale} messages={Locales[locale]}/>;\n};\n\nexport default AppIntl;","/*\n * Copyright (C) 2007-2020 Crafter Software Corporation. All Rights Reserved.\n *\n * This program is free software: you can redistribute it and/or modify\n * it under the terms of the GNU General Public License version 3 as published by\n * the Free Software Foundation.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU General Public License for more details.\n *\n * You should have received a copy of the GNU General Public License\n * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n */\n\nimport React, { Suspense } from 'react';\nimport Router from './Router';\nimport CircularProgressSpinner from './CircularProgressSpinner';\nimport { GlobalContextProvider } from './context';\nimport AppIntl from './AppIntl';\n\nexport default function App(props) {\n  return (\n    <GlobalContextProvider jQuery={props.jQuery}>\n      <AppIntl>\n        <Suspense\n          fallback={\n            <CircularProgressSpinner />\n          }\n        >\n          <Router />\n        </Suspense>\n      </AppIntl>\n    </GlobalContextProvider>\n  );\n}\n","/*\n * Copyright (C) 2007-2020 Crafter Software Corporation. All Rights Reserved.\n *\n * This program is free software: you can redistribute it and/or modify\n * it under the terms of the GNU General Public License version 3 as published by\n * the Free Software Foundation.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU General Public License for more details.\n *\n * You should have received a copy of the GNU General Public License\n * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n */\n\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './shared/App';\nimport Cookies from 'js-cookie';\nimport { siteName } from './shared/utils';\n// import * as serviceWorker from './serviceWorker';\n\nif (Cookies.get('crafterSite') !== siteName) {\n  Cookies.set('crafterSite', siteName);\n}\n\n// On occasions, Crafter's jQuery overrides the site's jQuery\n// briefly. This will get fixed on next releases of Crafter CMS,\n// but for now, adding jQuery to the global context to 'cache' it.\nReactDOM.render(\n  <React.StrictMode>\n    <App jQuery={window.jQuery} />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\n// serviceWorker.unregister();\n","/*\n * Copyright (C) 2007-2020 Crafter Software Corporation. All Rights Reserved.\n *\n * This program is free software: you can redistribute it and/or modify\n * it under the terms of the GNU General Public License version 3 as published by\n * the Free Software Foundation.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU General Public License for more details.\n *\n * You should have received a copy of the GNU General Public License\n * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n */\n\nimport { crafterConf } from '@craftercms/classes';\nimport Cookies from 'js-cookie';\n\nexport function isAuthoring() {\n  const html = document.documentElement;\n  const attr = html.getAttribute('data-craftercms-preview');\n  return (\n    // eslint-disable-next-line no-template-curly-in-string\n    attr === '${modePreview?c}' || // Otherwise disable/enable if you want to see pencils in dev server.\n    attr === 'true'\n  );\n}\n\nexport function createResource(factory) {\n  let result;\n  let status = \"pending\";\n  let suspender = factory().then(\n    response => {\n      status = \"success\";\n      result = response;\n    },\n    error => {\n      status = \"error\";\n      result = error;\n    }\n  );\n  return {\n    read() {\n      if (status === \"pending\") {\n        throw suspender;\n      } else if (status === \"error\") {\n        throw result;\n      } else if (status === \"success\") {\n        return result;\n      }\n    }\n  };\n}\n\nexport const siteName =\n  document.getElementById('2fb5164e').innerHTML ||\n  process.env.REACT_APP_CRAFTERCMS_SITE_ID ||\n  Cookies.get('crafterSite');\nif (!siteName) {\n  throw new Error('Site not set.');\n}\n\nexport const crafterConfig = {\n  baseUrl: process.env.REACT_APP_CRAFTERCMS_BASE_URL ?? '',\n  site: siteName\n};\n\ncrafterConf.configure(crafterConfig);\n\nexport function createTaxonomyFilter(name) {\n  return (taxonomy => taxonomy.craftercms.path.includes(name));\n};","/*\n * Copyright (C) 2007-2020 Crafter Software Corporation. All Rights Reserved.\n *\n * This program is free software: you can redistribute it and/or modify\n * it under the terms of the GNU General Public License version 3 as published by\n * the Free Software Foundation.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU General Public License for more details.\n *\n * You should have received a copy of the GNU General Public License\n * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n */\n\nimport React, { createContext, useContext, useMemo } from 'react';\nimport { isAuthoring } from './utils';\nimport { useSpreadState } from './hooks';\n\nexport const GlobalContext = createContext();\n\nfunction useGlobalContext() {\n  const context = useContext(GlobalContext);\n  if (!context) {\n    throw new Error(`useGlobalContext must be used within a GlobalContextProvider`);\n  }\n  return context;\n}\n\nfunction GlobalContextProvider(props) {\n  const [state, setState] = useSpreadState({\n    isAuthoring: isAuthoring(),\n    locale: 'en',\n    pages: null,\n    pagesLoading: false,\n    theme: 'light',\n    $: props.jQuery\n  });\n  const value = useMemo(() => [state, setState], [state, setState]);\n  return <GlobalContext.Provider value={value} {...props} />;\n}\n\nexport { GlobalContextProvider, useGlobalContext };\n","/*\n * Copyright (C) 2007-2020 Crafter Software Corporation. All Rights Reserved.\n *\n * This program is free software: you can redistribute it and/or modify\n * it under the terms of the GNU General Public License version 3 as published by\n * the Free Software Foundation.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU General Public License for more details.\n *\n * You should have received a copy of the GNU General Public License\n * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n */\n\nimport { siteName } from './shared/utils';\n\nlet graphqlServer = process.env.REACT_APP_GRAPHQL_SERVER;\nif (!graphqlServer.includes(siteName)) {\n  graphqlServer += `?crafterSite=${siteName}`;\n}\n\nexport function fetchQuery(\n  operation,\n  variables\n) {\n  return fetch(graphqlServer, {\n    method: 'POST',\n    headers: {\n      'Content-Type': 'application/json',\n    },\n    body: JSON.stringify({\n      query: operation.text,\n      variables\n    })\n  }).then(response => response.json());\n}","/*\n * Copyright (C) 2007-2020 Crafter Software Corporation. All Rights Reserved.\n *\n * This program is free software: you can redistribute it and/or modify\n * it under the terms of the GNU General Public License version 3 as published by\n * the Free Software Foundation.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU General Public License for more details.\n *\n * You should have received a copy of the GNU General Public License\n * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n */\n\n// language=GraphQL\nconst commonFragments = `  \n  fragment byUrlQueryPost on component_post {\n    ...byUrlQueryContentItemFields\n    slug: localId(transform: \"storeUrlToRenderUrl\")\n    pageTitle_s\n    pageDescription_s\n    blurb_t\n    headline_s\n    mainImage_s\n    content_o {\n      item {\n        key\n        component {\n          ...on component_rich_text {\n            ...byUrlQueryRichText\n          }\n          ...on component_image {\n            ...byUrlQueryImage\n          }\n          ...on component_responsive_columns {\n            ...byUrlQueryResponsiveColumns\n          }\n        }\n      }\n    }\n    authorBio_o {\n      item {\n        key\n        component {\n          ...byUrlQueryBioFragment\n        }\n      }\n    }\n    categories_o {\n      item {\n        key(filter: {or: $categoriesFilter})\n        value_smv\n      }\n    }\n    tags_o {\n      item {\n        value_smv\n        key(filter: {or: $tagsFilter})\n      }\n    }\n  }\n\n  fragment byUrlQueryContentItemFields on ContentItem {\n    guid: objectId\n    path: localId(filter: {not: [{equals: $exclude}]})\n    contentTypeId: content__type\n    dateCreated: createdDate_dt\n    dateModified: lastModifiedDate_dt\n    label: internal__name\n  }\n\n  fragment byUrlQueryBioFragment on component_bio {\n    guid: objectId\n    contentTypeId: content__type\n    label: internal__name\n    path: localId\n    bio_t\n    name_s\n    profilePic_s\n    linkButtonText_s\n    linkButtonUrl_s\n    showLinkButton_b\n    facebookLink_s\n    twitterLink_s\n    instagramLink_s\n    youTubeLink_s\n  }\n\n  fragment byUrlQueryRichText on component_rich_text {\n    ...byUrlQueryContentItemFields\n    content_html: content_html_raw\n  }\n\n  fragment byUrlQueryImage on component_image {\n    ...byUrlQueryContentItemFields\n    image_s\n    alternativeText_s\n  }\n\n  fragment byUrlQueryResponsiveColumns on component_responsive_columns {\n    ...byUrlQueryContentItemFields\n    columns_o {\n      item {\n        columnSize_s\n        content_o {\n          item {\n            key\n            component {\n              ...on component_rich_text {\n                ...byUrlQueryRichText\n              }\n              ...on component_image {\n                ...byUrlQueryImage\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n`\n\n// language=GraphQL\nconst main = `\n  ${commonFragments}\n\n  fragment byUrlQueryHomepage on page_entry  {\n    pageTitle_s\n    pageDescription_s\n    bios_o {\n      item {\n        key\n        component {\n          ...byUrlQueryBioFragment\n        }\n      }\n    }\n    slider_o {\n      item {\n        key\n        component {\n          ...byUrlQueryContentItemFields\n          ...on component_slider {\n            ...byUrlQuerySlider\n          }\n        }\n      }\n    }\n  }\n  \n  fragment byUrlQueryAboutPage on page_about {\n    pageTitle_s\n    pageDescription_s\n    headline_s\n    bios_o {\n      item {\n        key\n        component {\n          ...byUrlQueryBioFragment\n        }\n      }\n    }\n    content_o {\n      item {\n        key\n        component {\n          ...on component_rich_text {\n            ...byUrlQueryRichText\n          }\n          ...on component_image {\n            ...byUrlQueryImage\n          }\n          ...on component_responsive_columns {\n            ...byUrlQueryResponsiveColumns\n          }\n        }\n      }\n    }\n  }\n\n  fragment byUrlQueryContactPage on page_contact {\n    pageTitle_s\n    pageDescription_s\n    message_t\n    headline_s\n  }\n\n  fragment byUrlQueryCategoryPage on page_category {\n    pageTitle_s\n    pageDescription_s\n  }\n\n  fragment byUrlQuerySlider on component_slider {\n    ...byUrlQueryContentItemFields\n    posts_o {\n      item {\n        key\n        component {\n          ...byUrlQueryContentItemFields\n          slug: localId(transform: \"storeUrlToRenderUrl\")\n          pageTitle_s\n          pageDescription_s\n          blurb_t\n          headline_s\n          mainImage_s\n          authorBio_o {\n            item {\n              key,\n              component {\n                ...byUrlQueryBioFragment\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n\n  query byUrlQuery(\n    $url: String\n    $skipContentType: Boolean = true\n    $includePosts: Boolean = true\n    $postsLimit: Int = 8\n    $postsOffset: Int = 0\n    $exclude: String = \"\"\n    $categoriesFilter: [TextFilters!] = []\n    $tagsFilter: [TextFilters!] = []\n  ) {\n    content: contentItems {\n      total\n      items {\n        ...byUrlQueryContentItemFields\n        url: localId(\n          transform: \"storeUrlToRenderUrl\",\n          filter:{ regex: $url }\n        )\n        content__type(\n          filter:{\n            regex: \".*(bio|post|entry|category|contact|about|search).*\"\n          }\n        ) @skip (if: $skipContentType)\n        ...on page_entry {\n          ...byUrlQueryHomepage\n        }\n        ...on page_about {\n          ...byUrlQueryAboutPage\n        }\n        ...on page_contact {\n          ...byUrlQueryContactPage\n        }\n        ...on page_category {\n          ...byUrlQueryCategoryPage\n        }\n        ...on component_post {\n          ...byUrlQueryPost\n        }\n      }\n    }\n    levelDescriptors: component_level__descriptor {\n      items {\n        siteTitle_s\n        file__name\n        websiteShortname_s\n        socialLinks_o {\n          item {\n            socialNetwork_s\n            label_s\n            url_s\n          }\n        }\n      }\n    }\n    posts: component_post(\n      limit: $postsLimit,\n      offset: $postsOffset,\n      sortOrder: DESC,\n      sortBy: \"lastModifiedDate_dt\"\n    ) @include(if: $includePosts) {\n      total\n      items {\n        ...byUrlQueryPost\n      }\n    }\n  }\n`;\n\n//language=GraphQL\nexport const postsQuery = `\n  ${commonFragments}\n\n  query postsQuery(\n    $postsLimit: Int = 8\n    $postsOffset: Int = 0\n    $exclude: String = \"\"\n    $categoriesFilter: [TextFilters!] = []\n    $tagsFilter: [TextFilters!] = []\n  ) {\n    posts: component_post(\n      limit: $postsLimit,\n      offset: $postsOffset,\n      sortOrder: DESC,\n      sortBy: \"lastModifiedDate_dt\"\n    ) {\n      total\n      items {\n        ...byUrlQueryPost\n      }\n    }\n  }\n`;\n\nexport default main;","/*\n * Copyright (C) 2007-2020 Crafter Software Corporation. All Rights Reserved.\n *\n * This program is free software: you can redistribute it and/or modify\n * it under the terms of the GNU General Public License version 3 as published by\n * the Free Software Foundation.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU General Public License for more details.\n *\n * You should have received a copy of the GNU General Public License\n * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n */\n\nimport React from 'react';\n\nexport default function CircularProgressSpinner(props) {\n  const { message, screenHeight = true } = props;\n  return (\n    <div className={`circular-progress-spinner ${screenHeight ? 'circular-progress-spinner__screen-height' : ''}`}>\n      <div className=\"circular-progress-spinner--graphic-container\">\n        <svg className=\"circular-progress-spinner--graphic\">\n          <circle className=\"circular-progress-spinner--path\" cx=\"50\" cy=\"50\" r=\"20\" fill=\"none\" strokeWidth=\"2\" strokeMiterlimit=\"10\"/>\n        </svg>\n      </div>\n      {\n        message &&\n        <p className=\"circular-progress-spinner--message\">{message}</p>\n      }\n    </div>\n  );\n}\n","/*\n * Copyright (C) 2007-2020 Crafter Software Corporation. All Rights Reserved.\n *\n * This program is free software: you can redistribute it and/or modify\n * it under the terms of the GNU General Public License version 3 as published by\n * the Free Software Foundation.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU General Public License for more details.\n *\n * You should have received a copy of the GNU General Public License\n * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n */\n\nimport { useCallback, useEffect, useReducer, useRef, useState } from 'react';\nimport { fetchQuery } from '../fetchQuery';\nimport { useGlobalContext } from './context';\nimport { parse } from 'query-string';\nimport { useLocation } from 'react-router-dom';\nimport { crafterConfig, createResource } from './utils';\nimport { map } from 'rxjs/operators';\nimport { createQuery, search } from '@craftercms/search';\nimport { parseDescriptor, preParseSearchResults } from '@craftercms/content';\nimport { postsQuery } from './queries.graphql';\n\nexport const neverResource = createResource(() => new Promise(() => void 0));\n\nconst reducer = (state, nextState) => {\n  return { ...state, ...nextState };\n}\n\nexport function useSpreadState(initializerArg, initializer) {\n  return useReducer(reducer, initializerArg, initializer);\n}\n\nexport function useNavigation() {\n  const [{ pages, pagesLoading }, update] = useGlobalContext();\n  const destroyedRef = useRef(false);\n  useEffect(() => {\n    return () => {\n      destroyedRef.current = true;\n    };\n  }, []);\n  useEffect(() => {\n    if (!pages && !pagesLoading) {\n      update({ pagesLoading: true });\n      fetchQuery({\n        text: `\n          query Nav {\n            pages {\n              total\n              items {\n                navLabel\n                contentTypeId: content__type\n                url: localId(transform: \"storeUrlToRenderUrl\")\n                placeInNav(filter: { equals: true }) @skip(if: true)\n                orderDefault_f\n              }\n            }\n          }\n        `\n      }).then(({ data }) => {\n        (!destroyedRef.current) && update({ pages: data.pages.items });\n      });\n    }\n  }, [update, pages, pagesLoading]);\n  return pages;\n}\n\nexport function useSearchQuery() {\n  const { search } = useLocation();\n  const [query, setQuery] = useState(() => parse(search).q ?? '');\n  const [page, setPage] = useState(() => parse(search).p ?? 0);\n  const onChange = useCallback((e) => setQuery(e.target.value), []);\n  useEffect(() => {\n    setQuery(parse(search).q ?? '');\n    setPage(parse(search).p ?? 0);\n  }, [search]);\n\n  return [query, onChange, setQuery, page];\n}\n\nconst contentTypes = ['/component/post'];\nexport function useUrlSearchQueryFetchResource(size = 1) {\n  const [query, , , page] = useSearchQuery();\n  const [resource, setResource] = useState(neverResource);\n  // https://github.com/facebook/react/issues/14413\n  useEffect(() => {\n    // FYI: A GraphQL query could also be used instead of a direct Elasticsearch\n    setResource(createResource(\n      () => search(\n        createQuery('elasticsearch', {\n          query: {\n            'bool': {\n              'filter': [\n                { 'bool': { 'should': contentTypes.map(id => ({ 'match': { 'content-type': id } })) } },\n                { 'multi_match': { 'query': query, 'type': 'phrase_prefix'} }\n              ]\n            }\n          },\n          size,\n          from: page\n        }),\n        crafterConfig\n      ).pipe(\n        map(({ hits, ...rest }) => {\n          const counted = {};\n          const parsedHits = hits.map(({ _source }) => parseDescriptor(\n            preParseSearchResults(_source)\n          )).filter((content) => {\n            // TODO: Search currently coming with duplicates. Should address at the elastic query level.\n            if (content.craftercms.id in counted) {\n              return false;\n            } else {\n              counted[content.craftercms.id] = true;\n              return true;\n            }\n          });\n          return { ...rest, hits: parsedHits };\n        })\n      ).toPromise()\n    ));\n  }, [query, page, size]);\n  return resource;\n}\n\nexport function useFooter() {\n  const [{ footer, footerLoading }, update] = useGlobalContext();\n  const destroyedRef = useRef(false);\n\n  useEffect(() => {\n    return () => {\n      destroyedRef.current = true;\n    };\n  }, []);\n\n  useEffect(() => {\n    if (!footer && !footerLoading) {\n      update({ footerLoading: true });\n      fetchQuery({\n        text: `\n          query Footer {\n            component_footer {\n              items {\n                guid: objectId\n                path: localId\n                contentTypeId: content__type\n                dateCreated: createdDate_dt\n                dateModified: lastModifiedDate_dt\n                label: internal__name              \n                aboutTitle_s\n                about_t\n                aboutImage_s\n                quickLinksTitle_s\n                socialLinksTitle_s\n                file__name(filter: {matches: \"site-footer.xml\"})\n                internal__name\n                localId\n                quickLinks_o {\n                  item {\n                    label_s\n                    url_s\n                  }\n                }\n                copyright_html_raw\n              }\n            }\n          }\n        `\n      }).then(({ data }) => {\n        (!destroyedRef.current) && update({ footer: parseDescriptor(data.component_footer.items)[0] });\n      });\n    }\n  }, [update, footer, footerLoading]);\n  return footer;\n}\n\n// stores posts in globalContext to avoid multiple calls\nlet useRecentPostsLoading = false;\nexport function useRecentPosts() {\n  const [{ posts }, update] = useGlobalContext();\n  const destroyedRef = useRef(false);\n\n  useEffect(() => {\n    return () => {\n      destroyedRef.current = true;\n    };\n  }, []);\n\n  useEffect(() => {\n    if (!posts && !useRecentPostsLoading) {\n      update({ postsLoading: true });\n      fetchQuery({\n        text: postsQuery\n      }).then(({ data }) => {\n        (!destroyedRef.current) && update({ posts: parseDescriptor(data.posts.items) });\n      });\n    }\n  }, [update, posts]);\n  return posts;\n}\n\nexport function usePosts(paginationData, categories, tags, exclude) {\n  const [posts, setPosts] = useState();\n\n  useEffect(() => {\n    let categoriesFilter = categories\n      ? Array.isArray(categories)\n        ? categories.map(category => ({ matches: category.key }))\n        : [{ matches: categories.key }]\n      : [];\n    let tagsFilter = tags\n      ? Array.isArray(tags)\n        ? tags.map(tag => ({ matches: tag.key }))\n        : [{ matches: tags.key }]\n      : [];\n\n    fetchQuery(\n      { text: postsQuery },\n      {\n        postsLimit: paginationData.itemsPerPage,\n        postsOffset: (paginationData.currentPage * paginationData.itemsPerPage),\n        categoriesFilter,\n        tagsFilter,\n        exclude: exclude??\"\"\n      }\n    ).then(({ data }) => {\n      setPosts({\n        items: parseDescriptor(data.posts.items),\n        total: data.posts.total,\n        pageCount: Math.ceil(data.posts.total/paginationData.itemsPerPage)\n      });\n    });\n  }, [paginationData, categories, tags, exclude]);\n\n  return posts;\n}\n\nexport function useTaxonomiesResource() {\n  const [resource, setResource] = useState(neverResource);\n\n  useEffect(() => {\n    const resource = createResource(\n      () => fetchQuery({\n        text: `\n        query Taxonomies {\n          taxonomy {\n            total\n            items {\n              guid: objectId\n              path: localId\n              contentTypeId: content__type\n              dateCreated: createdDate_dt\n              dateModified: lastModifiedDate_dt\n              label: internal__name\n              items {\n                item {\n                  key\n                  value\n                  image_s\n                }\n              }\n            }\n          }\n        }\n      `\n      })\n    );\n    setResource(resource);\n  }, []);\n  return resource;\n}","/*\n * Copyright (C) 2007-2020 Crafter Software Corporation. All Rights Reserved.\n *\n * This program is free software: you can redistribute it and/or modify\n * it under the terms of the GNU General Public License version 3 as published by\n * the Free Software Foundation.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU General Public License for more details.\n *\n * You should have received a copy of the GNU General Public License\n * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n */\n\nimport { lazy } from 'react';\n\nconst map = {\n  '/page/entry': lazy(() => import('../pages/Home')),\n  '/page/about': lazy(() => import('../pages/About')),\n  '/page/contact': lazy(() => import('../pages/Contact')),\n  '/page/category': lazy(() => import('../pages/Category')),\n  '/page/search': lazy(() => import('../pages/Search')),\n  '/component/header': lazy(() => import('../components/Header')),\n  '/component/footer': lazy(() => import('../components/Footer')),\n  '/component/bio': lazy(() => import('../components/Bio')),\n  '/component/image': lazy(() => import('../components/Image')),\n  '/component/responsive_columns': lazy(() => import('../components/ResponsiveColumns')),\n  '/component/rich_text': lazy(() => import('../components/RichText')),\n  '/component/slider': lazy(() => import('../components/Slider')),\n  '/component/post': lazy(() => import('../pages/Post'))\n};\n\nexport default map;"],"sourceRoot":""}